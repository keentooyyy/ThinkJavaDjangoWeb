# Generated by Django 5.2.7 on 2025-10-24 05:35

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SimpleAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], default='ADMIN', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TestDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('test_type', models.CharField(choices=[('pre', 'Pre-Test'), ('post', 'Post-Test')], max_length=10)),
                ('shuffle_questions', models.BooleanField(default=False)),
                ('shuffle_choices', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='StudentMana_name_0df7c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_id', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], max_length=20)),
                ('action', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['actor_id', 'role'], name='StudentMana_actor_i_dcd0a5_idx'), models.Index(fields=['timestamp'], name='StudentMana_timesta_7192ea_idx'), models.Index(fields=['action'], name='StudentMana_action_0506e7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.department')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], default='TEACHER', max_length=20)),
                ('login_key', models.CharField(blank=True, editable=False, max_length=128, null=True, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['teacher_id'], name='StudentMana_teacher_620fa4_idx'), models.Index(fields=['last_name', 'first_name'], name='StudentMana_last_na_b6a36f_idx')],
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('points', models.FloatField(default=1.0)),
                ('required', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='StudentManagementSystem.testdefinition')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='TestChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='StudentManagementSystem.testquestion')),
            ],
            options={
                'ordering': ['sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('middle_initial', models.CharField(blank=True, max_length=5, null=True)),
                ('suffix', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('father_name', models.CharField(blank=True, max_length=150, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=150, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('barangay', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educational_backgrounds', to='StudentManagementSystem.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='YearLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['year'], name='StudentMana_year_c2b100_idx')],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], default='STUDENT', max_length=20)),
                ('login_key', models.CharField(blank=True, editable=False, max_length=128, null=True, unique=True)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.section')),
                ('year_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.yearlevel')),
            ],
        ),
        migrations.CreateModel(
            name='SectionJoinCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.department')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.section')),
                ('year_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.yearlevel')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='year_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.yearlevel'),
        ),
        migrations.CreateModel(
            name='HandledSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.department')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.section')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handled_sections', to='StudentManagementSystem.teacher')),
                ('year_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.yearlevel')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], max_length=20)),
                ('sender_id', models.CharField(max_length=50)),
                ('recipient_role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('section_recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='StudentManagementSystem.section')),
                ('student_recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='StudentManagementSystem.student')),
                ('teacher_recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='StudentManagementSystem.teacher')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient_role', 'is_read'], name='StudentMana_recipie_29693c_idx'), models.Index(fields=['created_at'], name='StudentMana_created_fd4459_idx')],
            },
        ),
        migrations.CreateModel(
            name='TestAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tests', to='StudentManagementSystem.section')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='StudentManagementSystem.testdefinition')),
            ],
            options={
                'unique_together': {('test', 'section')},
            },
        ),
        migrations.CreateModel(
            name='StudentTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('taken_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.testdefinition')),
            ],
            options={
                'unique_together': {('student', 'test')},
            },
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_page', models.PositiveIntegerField(default=0)),
                ('page_size', models.PositiveIntegerField(default=25)),
                ('question_order', models.JSONField(default=list)),
                ('choice_orders', models.JSONField(default=dict)),
                ('answers', models.JSONField(default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.testdefinition')),
            ],
            options={
                'unique_together': {('student', 'test')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(default=False)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.student')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.testchoice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentManagementSystem.testquestion')),
            ],
            options={
                'unique_together': {('student', 'question')},
            },
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['content_type', 'object_id'], name='StudentMana_content_a6ebe3_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['student_id'], name='StudentMana_student_4ba16d_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['last_name', 'first_name'], name='StudentMana_last_na_ab2842_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['year_level', 'section'], name='StudentMana_year_le_50e5dd_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionjoincode',
            index=models.Index(fields=['section', 'department', 'year_level'], name='StudentMana_section_d87578_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sectionjoincode',
            unique_together={('section', 'department', 'year_level')},
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['department', 'year_level', 'letter'], name='StudentMana_departm_4dc12c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('department', 'year_level', 'letter')},
        ),
        migrations.AddIndex(
            model_name='handledsection',
            index=models.Index(fields=['teacher', 'department', 'year_level', 'section'], name='StudentMana_teacher_742eb3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='handledsection',
            unique_together={('teacher', 'department', 'year_level', 'section')},
        ),
    ]
